/root/cs144/sponge/libsponge/byte_stream.hh:4:1: warning: system include deque not allowed, transitively included from /root/cs144/sponge/libsponge/byte_stream.hh [llvmlibc-restrict-system-libc-headers]
#include <deque>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/byte_stream.hh:5:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/byte_stream.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/byte_stream.hh:40:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(const std::string &data);
    ~~~~~~ ^
    auto                                  -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:43:5: warning: function 'remaining_capacity' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t remaining_capacity() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:43:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t remaining_capacity() const;
    ~~~~~~ ^
    auto                              -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:57:5: warning: function 'peek_output' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string peek_output(const size_t len) const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:57:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string peek_output(const size_t len) const;
    ~~~~~~~~~~~ ^
    auto                                            -> std::string
/root/cs144/sponge/libsponge/byte_stream.hh:64:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string read(const size_t len);
    ~~~~~~~~~~~ ^
    auto                               -> std::string
/root/cs144/sponge/libsponge/byte_stream.hh:67:5: warning: function 'input_ended' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool input_ended() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:67:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool input_ended() const;
    ~~~~ ^
    auto                     -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:70:5: warning: function 'error' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool error() const { return _error; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:70:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool error() const { return _error; }
    ~~~~ ^
    auto               -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:73:5: warning: function 'buffer_size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t buffer_size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:73:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t buffer_size() const;
    ~~~~~~ ^
    auto                       -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:76:5: warning: function 'buffer_empty' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool buffer_empty() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:76:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool buffer_empty() const;
    ~~~~ ^
    auto                      -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:79:5: warning: function 'eof' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool eof() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:79:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool eof() const;
    ~~~~ ^
    auto             -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:86:5: warning: function 'bytes_written' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t bytes_written() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:86:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t bytes_written() const;
    ~~~~~~ ^
    auto                         -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:89:5: warning: function 'bytes_read' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t bytes_read() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:89:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t bytes_read() const;
    ~~~~~~ ^
    auto                      -> size_t
/root/cs144/sponge/libsponge/util/util.hh:4:1: warning: system include algorithm not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:5:1: warning: system include cerrno not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cerrno>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:6:1: warning: system include cstddef not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cstddef>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:7:1: warning: system include cstdint not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdint>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:8:1: warning: system include iterator not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <iterator>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:9:1: warning: system include ostream not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <ostream>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:10:1: warning: system include random not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <random>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:11:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:12:1: warning: system include system_error not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <system_error>
^~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:13:1: warning: system include vector not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:26:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : system_error(error_code, category), _attempt_and_error(attempt + ": " + std::system_error::what()) {}
                                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:5964:5: note: resolves to this declaration
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/root/cs144/sponge/libsponge/util/util.hh:26:81: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : system_error(error_code, category), _attempt_and_error(attempt + ": " + std::system_error::what()) {}
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/libsponge/util/util.hh:29:5: warning: function 'what' should be marked [[nodiscard]] [modernize-use-nodiscard]
    const char *what() const noexcept override { return _attempt_and_error.c_str(); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/util.hh:29:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    const char *what() const noexcept override { return _attempt_and_error.c_str(); }
    ~~~~~~~~~~~~^
    auto                              -> const char *
/root/cs144/sponge/libsponge/util/util.hh:38:71: warning: '__errno_location' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    explicit unix_error(const std::string &attempt, const int error = errno)
                                                                      ^
/usr/include/errno.h:38:18: note: expanded from macro 'errno'
# define errno (*__errno_location ())
                 ^
/usr/include/errno.h:37:13: note: resolves to this declaration
extern int *__errno_location (void) __THROW __attribute_const__;
            ^
/root/cs144/sponge/libsponge/util/util.hh:39:24: warning: 'system_category' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : tagged_error(std::system_category(), attempt, error) {}
                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/system_error:134:40: note: resolves to this declaration
  _GLIBCXX_CONST const error_category& system_category() noexcept;
                                       ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
~~~ ^
auto                                                                                  -> int
/root/cs144/sponge/libsponge/util/util.hh:46:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int SystemCall(const std::string &attempt, const int return_value, const int errno_mask = 0);
~~~ ^
auto                                                                                         -> int
/root/cs144/sponge/libsponge/util/util.hh:49:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::mt19937 get_random_generator();
~~~~~~~~~~~~ ^
auto                                -> std::mt19937
/root/cs144/sponge/libsponge/util/util.hh:52:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
uint64_t timestamp_ms();
~~~~~~~~ ^
auto                    -> uint64_t
/root/cs144/sponge/libsponge/util/util.hh:61:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    InternetChecksum(const uint32_t initial_sum = 0);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/util.hh:63:5: warning: function 'value' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint16_t value() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/util.hh:63:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint16_t value() const;
    ~~~~~~~~ ^
    auto                   -> uint16_t
/root/cs144/sponge/tests/byte_stream_test_harness.cc:3:1: warning: system include memory not allowed [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.cc:4:1: warning: system include sstream not allowed [llvmlibc-restrict-system-libc-headers]
#include <sstream>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.cc:6:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
using namespace std;
                ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:10:21: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStreamTestStep::operator std::string() const { return "ByteStreamTestStep"; }
                    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:12:26: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void ByteStreamTestStep::execute(ByteStream &) const {}
                         ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:12:46: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
void ByteStreamTestStep::execute(ByteStream &) const {}
                                             ^
                                              /*unused*/
/root/cs144/sponge/tests/byte_stream_test_harness.cc:14:21: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
ByteStreamTestStep::~ByteStreamTestStep() {}
                    ^                     ~~
                                          = default;
/root/cs144/sponge/tests/byte_stream_test_harness.cc:14:21: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
/root/cs144/sponge/tests/byte_stream_test_harness.cc:18:33: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStreamExpectationViolation::ByteStreamExpectationViolation(const std::string &msg) : std::runtime_error(msg) {}
                                ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                 ^
auto
/root/cs144/sponge/tests/byte_stream_test_harness.cc:24:77: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    return ByteStreamExpectationViolation("The ByteStream should have had " + property_name + " equal to " +
                                                                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.tcc:1157:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:24:93: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    return ByteStreamExpectationViolation("The ByteStream should have had " + property_name + " equal to " +
                                                                                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:24:108: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    return ByteStreamExpectationViolation("The ByteStream should have had " + property_name + " equal to " +
                                                                                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6004:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:25:43: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
                                          to_string(expected) + " but instead it was " + to_string(actual));
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:25:63: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
                                          to_string(expected) + " but instead it was " + to_string(actual));
                                                              ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:25:88: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
                                          to_string(expected) + " but instead it was " + to_string(actual));
                                                                                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6004:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:25:90: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
                                          to_string(expected) + " but instead it was " + to_string(actual));
                                                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:30:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStreamExpectation::operator std::string() const { return "Expectation: " + description(); }
                       ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:30:78: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
ByteStreamExpectation::operator std::string() const { return "Expectation: " + description(); }
                                                                             ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:32:36: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string ByteStreamExpectation::description() const { return "description missing"; }
                                   ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:32:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string ByteStreamExpectation::description() const { return "description missing"; }
~~~~~~~~~~~                        ^
auto                                                   -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:34:29: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void ByteStreamExpectation::execute(ByteStream &) const {}
                            ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:34:49: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
void ByteStreamExpectation::execute(ByteStream &) const {}
                                                ^
                                                 /*unused*/
/root/cs144/sponge/tests/byte_stream_test_harness.cc:36:24: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
ByteStreamExpectation::~ByteStreamExpectation() {}
                       ^                        ~~
                                                = default;
/root/cs144/sponge/tests/byte_stream_test_harness.cc:36:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
/root/cs144/sponge/tests/byte_stream_test_harness.cc:40:19: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStreamAction::operator std::string() const { return "     Action: " + description(); }
                  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:40:73: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
ByteStreamAction::operator std::string() const { return "     Action: " + description(); }
                                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:42:31: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string ByteStreamAction::description() const { return "description missing"; }
                              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:42:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string ByteStreamAction::description() const { return "description missing"; }
~~~~~~~~~~~                   ^
auto                                              -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:44:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void ByteStreamAction::execute(ByteStream &) const {}
                       ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:44:44: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
void ByteStreamAction::execute(ByteStream &) const {}
                                           ^
                                            /*unused*/
/root/cs144/sponge/tests/byte_stream_test_harness.cc:46:19: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
ByteStreamAction::~ByteStreamAction() {}
                  ^                   ~~
                                      = default;
/root/cs144/sponge/tests/byte_stream_test_harness.cc:46:19: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
/root/cs144/sponge/tests/byte_stream_test_harness.cc:48:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStreamTestHarness::ByteStreamTestHarness(const std::string &test_name, const size_t capacity)
                       ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:48:46: warning: pass by value and use std::move [modernize-pass-by-value]
ByteStreamTestHarness::ByteStreamTestHarness(const std::string &test_name, const size_t capacity)
                                             ^~~~~~~~~~~~~~~~~~~
                                             std::string 
/root/cs144/sponge/tests/byte_stream_test_harness.cc:51:8: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    ss << "Initialized with ("
       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:52:8: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
       << "capacity=" << capacity << ")";
       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:52:23: warning: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
       << "capacity=" << capacity << ")";
                      ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:170:7: note: resolves to this declaration
      operator<<(unsigned long __n)
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:52:35: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
       << "capacity=" << capacity << ")";
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:56:29: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void ByteStreamTestHarness::execute(const ByteStreamTestStep &step) {
                            ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:61:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Test Failure on expectation:\n\t" << std::string(step);
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:61:57: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Test Failure on expectation:\n\t" << std::string(step);
                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6323:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:62:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "\n\nFailure message:\n\t" << e.what();
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:62:49: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "\n\nFailure message:\n\t" << e.what();
                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:63:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "\n\nList of steps that executed successfully:";
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:64:35: warning: 'operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        for (const std::string &s : _steps_executed) {
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:884:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:64:35: warning: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        for (const std::string &s : _steps_executed) {
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:796:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:64:35: warning: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        for (const std::string &s : _steps_executed) {
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:804:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:65:23: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            std::cerr << "\n\t" << s;
                      ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:65:33: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            std::cerr << "\n\t" << s;
                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6323:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:67:19: warning: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:108:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:67:22: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:593:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:67:32: warning: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:108:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:67:35: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:593:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:68:60: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("The test \"" + _test_name + "\" failed");
                                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.tcc:1157:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:68:73: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("The test \"" + _test_name + "\" failed");
                                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:70:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Test Failure on expectation:\n\t" << std::string(step);
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:70:57: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Test Failure on expectation:\n\t" << std::string(step);
                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6323:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:71:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "\n\nException:\n\t" << e.what();
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:71:43: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "\n\nException:\n\t" << e.what();
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:72:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "\n\nList of steps that executed successfully:";
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:73:35: warning: 'operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        for (const std::string &s : _steps_executed) {
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:884:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:73:35: warning: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        for (const std::string &s : _steps_executed) {
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:796:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:73:35: warning: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        for (const std::string &s : _steps_executed) {
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:804:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:74:23: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            std::cerr << "\n\t" << s;
                      ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:74:33: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            std::cerr << "\n\t" << s;
                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6323:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:76:19: warning: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:108:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:76:22: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:593:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:76:32: warning: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:108:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:76:35: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << std::endl << std::endl;
                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:593:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:77:60: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("The test \"" + _test_name +
                                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.tcc:1157:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:77:73: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("The test \"" + _test_name +
                                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:83:23: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string EndInput::description() const { return "end input"; }
                      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:83:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string EndInput::description() const { return "end input"; }
~~~~~~~~~~~           ^
auto                                      -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:84:16: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void EndInput::execute(ByteStream &bs) const { bs.end_input(); }
               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:87:8: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
Write::Write(const std::string &data) : _data(data) {}
       ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:87:14: warning: pass by value and use std::move [modernize-pass-by-value]
Write::Write(const std::string &data) : _data(data) {}
             ^~~~~~~~~~~~~~~~~~~
             std::string                      std::move( )
/root/cs144/sponge/tests/byte_stream_test_harness.cc:88:15: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
Write &Write::with_bytes_written(const size_t bytes_written) {
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:88:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Write &Write::with_bytes_written(const size_t bytes_written) {
~~~~~~~       ^
auto                                                         -> Write &
/root/cs144/sponge/tests/byte_stream_test_harness.cc:89:20: warning: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    _bytes_written = bytes_written;
                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/optional:943:11: note: resolves to this declaration
    class optional
          ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:92:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string Write::description() const { return "write \"" + _data + "\" to the stream"; }
                   ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:92:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string Write::description() const { return "write \"" + _data + "\" to the stream"; }
~~~~~~~~~~~        ^
auto                                   -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:92:60: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Write::description() const { return "write \"" + _data + "\" to the stream"; }
                                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.tcc:1157:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:92:68: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Write::description() const { return "write \"" + _data + "\" to the stream"; }
                                                                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:93:13: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void Write::execute(ByteStream &bs) const {
            ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:96:15: warning: 'property<unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("bytes_written", _bytes_written.value(), bytes_written);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:101:6: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
Pop::Pop(const size_t len) : _len(len) {}
     ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:102:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string Pop::description() const { return "pop " + to_string(_len); }
                 ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:102:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string Pop::description() const { return "pop " + to_string(_len); }
~~~~~~~~~~~      ^
auto                                 -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:102:54: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Pop::description() const { return "pop " + to_string(_len); }
                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:102:56: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Pop::description() const { return "pop " + to_string(_len); }
                                                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:103:11: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void Pop::execute(ByteStream &bs) const { bs.pop_output(_len); }
          ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:106:13: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
InputEnded::InputEnded(const bool input_ended) : _input_ended(input_ended) {}
            ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:107:25: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string InputEnded::description() const { return "input_ended: " + to_string(_input_ended); }
                        ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:107:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string InputEnded::description() const { return "input_ended: " + to_string(_input_ended); }
~~~~~~~~~~~             ^
auto                                        -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:107:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string InputEnded::description() const { return "input_ended: " + to_string(_input_ended); }
                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:107:72: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string InputEnded::description() const { return "input_ended: " + to_string(_input_ended); }
                                                                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6453:3: note: resolves to this declaration
  to_string(int __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:107:82: warning: implicit conversion bool -> 'int' [readability-implicit-bool-conversion]
std::string InputEnded::description() const { return "input_ended: " + to_string(_input_ended); }
                                                                                 ^
                                                                                 static_cast<int>( )
/root/cs144/sponge/tests/byte_stream_test_harness.cc:108:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void InputEnded::execute(ByteStream &bs) const {
                 ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:111:15: warning: 'property<bool>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("input_ended", _input_ended, input_ended);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:116:14: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
BufferEmpty::BufferEmpty(const bool buffer_empty) : _buffer_empty(buffer_empty) {}
             ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:117:26: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string BufferEmpty::description() const { return "buffer_empty: " + to_string(_buffer_empty); }
                         ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:117:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string BufferEmpty::description() const { return "buffer_empty: " + to_string(_buffer_empty); }
~~~~~~~~~~~              ^
auto                                         -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:117:72: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BufferEmpty::description() const { return "buffer_empty: " + to_string(_buffer_empty); }
                                                                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:117:74: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BufferEmpty::description() const { return "buffer_empty: " + to_string(_buffer_empty); }
                                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6453:3: note: resolves to this declaration
  to_string(int __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:117:84: warning: implicit conversion bool -> 'int' [readability-implicit-bool-conversion]
std::string BufferEmpty::description() const { return "buffer_empty: " + to_string(_buffer_empty); }
                                                                                   ^
                                                                                   static_cast<int>( )
/root/cs144/sponge/tests/byte_stream_test_harness.cc:118:19: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void BufferEmpty::execute(ByteStream &bs) const {
                  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:121:15: warning: 'property<bool>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("buffer_empty", _buffer_empty, buffer_empty);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:126:6: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
Eof::Eof(const bool eof) : _eof(eof) {}
     ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:127:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string Eof::description() const { return "eof: " + to_string(_eof); }
                 ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:127:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string Eof::description() const { return "eof: " + to_string(_eof); }
~~~~~~~~~~~      ^
auto                                 -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:127:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Eof::description() const { return "eof: " + to_string(_eof); }
                                                      ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:127:57: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Eof::description() const { return "eof: " + to_string(_eof); }
                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6453:3: note: resolves to this declaration
  to_string(int __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:127:67: warning: implicit conversion bool -> 'int' [readability-implicit-bool-conversion]
std::string Eof::description() const { return "eof: " + to_string(_eof); }
                                                                  ^
                                                                  static_cast<int>( )
/root/cs144/sponge/tests/byte_stream_test_harness.cc:128:11: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void Eof::execute(ByteStream &bs) const {
          ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:131:15: warning: 'property<bool>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("eof", _eof, eof);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:136:13: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
BufferSize::BufferSize(const size_t buffer_size) : _buffer_size(buffer_size) {}
            ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:137:25: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string BufferSize::description() const { return "buffer_size: " + to_string(_buffer_size); }
                        ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:137:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string BufferSize::description() const { return "buffer_size: " + to_string(_buffer_size); }
~~~~~~~~~~~             ^
auto                                        -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:137:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BufferSize::description() const { return "buffer_size: " + to_string(_buffer_size); }
                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:137:72: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BufferSize::description() const { return "buffer_size: " + to_string(_buffer_size); }
                                                                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:138:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void BufferSize::execute(ByteStream &bs) const {
                 ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:141:15: warning: 'property<unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("buffer_size", _buffer_size, buffer_size);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:146:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
RemainingCapacity::RemainingCapacity(const size_t remaining_capacity) : _remaining_capacity(remaining_capacity) {}
                   ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:147:32: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string RemainingCapacity::description() const { return "remaining_capacity: " + to_string(_remaining_capacity); }
                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:147:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string RemainingCapacity::description() const { return "remaining_capacity: " + to_string(_remaining_capacity); }
~~~~~~~~~~~                    ^
auto                                               -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:147:84: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string RemainingCapacity::description() const { return "remaining_capacity: " + to_string(_remaining_capacity); }
                                                                                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:147:86: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string RemainingCapacity::description() const { return "remaining_capacity: " + to_string(_remaining_capacity); }
                                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:148:25: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void RemainingCapacity::execute(ByteStream &bs) const {
                        ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:151:15: warning: 'property<unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("remaining_capacity", _remaining_capacity, remaining_capacity);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:156:15: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
BytesWritten::BytesWritten(const size_t bytes_written) : _bytes_written(bytes_written) {}
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:157:27: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string BytesWritten::description() const { return "bytes_written: " + to_string(_bytes_written); }
                          ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:157:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string BytesWritten::description() const { return "bytes_written: " + to_string(_bytes_written); }
~~~~~~~~~~~               ^
auto                                          -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:157:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BytesWritten::description() const { return "bytes_written: " + to_string(_bytes_written); }
                                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:157:76: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BytesWritten::description() const { return "bytes_written: " + to_string(_bytes_written); }
                                                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:158:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void BytesWritten::execute(ByteStream &bs) const {
                   ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:161:15: warning: 'property<unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("bytes_written", _bytes_written, bytes_written);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:166:12: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
BytesRead::BytesRead(const size_t bytes_read) : _bytes_read(bytes_read) {}
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:167:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string BytesRead::description() const { return "bytes_read: " + to_string(_bytes_read); }
                       ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:167:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string BytesRead::description() const { return "bytes_read: " + to_string(_bytes_read); }
~~~~~~~~~~~            ^
auto                                       -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:167:68: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BytesRead::description() const { return "bytes_read: " + to_string(_bytes_read); }
                                                                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:167:70: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string BytesRead::description() const { return "bytes_read: " + to_string(_bytes_read); }
                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6469:3: note: resolves to this declaration
  to_string(unsigned long __val)
  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:168:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void BytesRead::execute(ByteStream &bs) const {
                ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:171:15: warning: 'property<unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation::property("bytes_read", _bytes_read, bytes_read);
              ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:21:64: note: resolves to this declaration
ByteStreamExpectationViolation ByteStreamExpectationViolation::property(const std::string &property_name,
                                                               ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:176:7: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
Peek::Peek(const std::string &output) : _output(output) {}
      ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:176:12: warning: pass by value and use std::move [modernize-pass-by-value]
Peek::Peek(const std::string &output) : _output(output) {}
           ^~~~~~~~~~~~~~~~~~~
           std::string                          std::move( )
/root/cs144/sponge/tests/byte_stream_test_harness.cc:177:19: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string Peek::description() const { return "\"" + _output + "\" at the front of the stream"; }
                  ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:177:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string Peek::description() const { return "\"" + _output + "\" at the front of the stream"; }
~~~~~~~~~~~       ^
auto                                  -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.cc:177:53: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Peek::description() const { return "\"" + _output + "\" at the front of the stream"; }
                                                    ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.tcc:1157:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:177:63: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
std::string Peek::description() const { return "\"" + _output + "\" at the front of the stream"; }
                                                              ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:178:12: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void Peek::execute(ByteStream &bs) const {
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:180:16: warning: 'operator!=<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    if (output != _output) {
               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6095:5: note: resolves to this declaration
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:181:60: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("Expected \"" + _output + "\" at the front of the stream, but found \"" +
                                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.tcc:1157:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:181:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("Expected \"" + _output + "\" at the front of the stream, but found \"" +
                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:181:118: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw ByteStreamExpectationViolation("Expected \"" + _output + "\" at the front of the stream, but found \"" +
                                                                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:5992:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.cc:182:53: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
                                             output + "\"");
                                                    ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:7:1: warning: system include exception not allowed, transitively included from /root/cs144/sponge/tests/byte_stream_test_harness.hh [llvmlibc-restrict-system-libc-headers]
#include <exception>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.hh:8:1: warning: system include initializer_list not allowed, transitively included from /root/cs144/sponge/tests/byte_stream_test_harness.hh [llvmlibc-restrict-system-libc-headers]
#include <initializer_list>
^~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.hh:9:1: warning: system include iostream not allowed, transitively included from /root/cs144/sponge/tests/byte_stream_test_harness.hh [llvmlibc-restrict-system-libc-headers]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.hh:10:1: warning: system include memory not allowed, transitively included from /root/cs144/sponge/tests/byte_stream_test_harness.hh [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.hh:11:1: warning: system include optional not allowed, transitively included from /root/cs144/sponge/tests/byte_stream_test_harness.hh [llvmlibc-restrict-system-libc-headers]
#include <optional>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.hh:12:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/tests/byte_stream_test_harness.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/tests/byte_stream_test_harness.hh:14:8: warning: class 'ByteStreamTestStep' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
struct ByteStreamTestStep {
       ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:15:13: warning: 'operator basic_string' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    virtual operator std::string() const;
            ^
            explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:16:38: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    virtual void execute(ByteStream &) const;
                                     ^
                                      /*unused*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:22:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    ByteStreamExpectationViolation(const std::string &msg);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:25:43: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    static ByteStreamExpectationViolation property(const std::string &property_name,
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
           auto
/root/cs144/sponge/tests/byte_stream_test_harness.hh:30:8: warning: class 'ByteStreamExpectation' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
struct ByteStreamExpectation : public ByteStreamTestStep {
       ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:31:5: warning: 'operator basic_string' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator std::string() const override;
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:32:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    virtual std::string description() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:32:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    virtual std::string description() const;
            ~~~~~~~~~~~ ^
            auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:33:18: warning: 'virtual' is redundant since the function is already declared 'override' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
    virtual void execute(ByteStream &) const override;
    ~~~~~~~~     ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:33:38: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    virtual void execute(ByteStream &) const override;
                                     ^
                                      /*unused*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:34:13: warning: 'virtual' is redundant since the function is already declared 'override' [hicpp-use-override,modernize-use-override]
    virtual ~ByteStreamExpectation() override;
    ~~~~~~~~^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:37:8: warning: class 'ByteStreamAction' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
struct ByteStreamAction : public ByteStreamTestStep {
       ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:38:5: warning: 'operator basic_string' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator std::string() const override;
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:39:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    virtual std::string description() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:39:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    virtual std::string description() const;
            ~~~~~~~~~~~ ^
            auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:40:18: warning: 'virtual' is redundant since the function is already declared 'override' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
    virtual void execute(ByteStream &) const override;
    ~~~~~~~~     ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:40:38: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    virtual void execute(ByteStream &) const override;
                                     ^
                                      /*unused*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:41:13: warning: 'virtual' is redundant since the function is already declared 'override' [hicpp-use-override,modernize-use-override]
    virtual ~ByteStreamAction() override;
    ~~~~~~~~^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:45:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:45:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:46:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:50:17: warning: member variable '_data' has public visibility [misc-non-private-member-variables-in-classes]
    std::string _data;
                ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:51:27: warning: member variable '_bytes_written' has public visibility [misc-non-private-member-variables-in-classes]
    std::optional<size_t> _bytes_written{};
                          ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:53:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Write(const std::string &data);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:54:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    Write &with_bytes_written(const size_t bytes_written);
    ~~~~~~~^
    auto                                                  -> Write &
/root/cs144/sponge/tests/byte_stream_test_harness.hh:55:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:55:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:56:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:60:12: warning: member variable '_len' has public visibility [misc-non-private-member-variables-in-classes]
    size_t _len;
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:62:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Pop(const size_t len);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:63:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:63:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:64:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:68:10: warning: member variable '_input_ended' has public visibility [misc-non-private-member-variables-in-classes]
    bool _input_ended;
         ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:70:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    InputEnded(const bool input_ended);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:71:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:71:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:72:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:76:10: warning: member variable '_buffer_empty' has public visibility [misc-non-private-member-variables-in-classes]
    bool _buffer_empty;
         ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:78:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferEmpty(const bool buffer_empty);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:79:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:79:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:80:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:84:10: warning: member variable '_eof' has public visibility [misc-non-private-member-variables-in-classes]
    bool _eof;
         ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:86:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Eof(const bool eof);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:87:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:87:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:88:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:92:12: warning: member variable '_buffer_size' has public visibility [misc-non-private-member-variables-in-classes]
    size_t _buffer_size;
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:94:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferSize(const size_t buffer_size);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:95:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:95:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:96:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:100:12: warning: member variable '_bytes_written' has public visibility [misc-non-private-member-variables-in-classes]
    size_t _bytes_written;
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:102:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BytesWritten(const size_t bytes_written);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:103:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:103:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:104:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:108:12: warning: member variable '_bytes_read' has public visibility [misc-non-private-member-variables-in-classes]
    size_t _bytes_read;
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:110:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BytesRead(const size_t bytes_read);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:111:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:111:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:112:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:116:12: warning: member variable '_remaining_capacity' has public visibility [misc-non-private-member-variables-in-classes]
    size_t _remaining_capacity;
           ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:118:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    RemainingCapacity(const size_t remaining_capacity);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:119:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:119:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:120:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
/root/cs144/sponge/tests/byte_stream_test_harness.hh:124:17: warning: member variable '_output' has public visibility [misc-non-private-member-variables-in-classes]
    std::string _output;
                ^
/root/cs144/sponge/tests/byte_stream_test_harness.hh:126:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Peek(const std::string &output);
    ^
    explicit 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:127:5: warning: function 'description' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string description() const override;
    ^
    [[nodiscard]] 
/root/cs144/sponge/tests/byte_stream_test_harness.hh:127:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string description() const override;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/tests/byte_stream_test_harness.hh:128:30: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
    void execute(ByteStream &) const override;
                             ^
                              /*bs*/
Built target tidy_quiet_tests__byte_stream_test_harness.cc
/root/cs144/sponge/libsponge/util/buffer.hh:4:1: warning: system include algorithm not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:5:1: warning: system include deque not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <deque>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:6:1: warning: system include memory not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:7:1: warning: system include numeric not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <numeric>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:8:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:9:1: warning: system include string_view not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <string_view>
^~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:10:1: warning: system include sys/uio.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <sys/uio.h>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:11:1: warning: system include vector not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:23:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:23:51: warning: 'make_shared<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
                                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr.h:718:5: note: resolves to this declaration
    make_shared(_Args&&... __args)
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:23:81: warning: 'move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:27:5: warning: function 'str' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string_view str() const {
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:27:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string_view str() const {
    ~~~~~~~~~~~~~~~~ ^
    auto                         -> std::string_view
/root/cs144/sponge/libsponge/util/buffer.hh:31:25: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        return {_storage->data() + _starting_offset, _storage->size() - _starting_offset};
                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/buffer.hh:31:62: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        return {_storage->data() + _starting_offset, _storage->size() - _starting_offset};
                                                             ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/buffer.hh:34:5: warning: 'operator basic_string_view' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator std::string_view() const { return str(); }
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:38:5: warning: function 'at' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint8_t at(const size_t n) const { return str().at(n); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:38:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint8_t at(const size_t n) const { return str().at(n); }
    ~~~~~~~ ^
    auto                             -> uint8_t
/root/cs144/sponge/libsponge/util/buffer.hh:41:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const { return str().size(); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:41:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const { return str().size(); }
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:44:5: warning: function 'copy' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string copy() const { return std::string(str()); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:44:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string copy() const { return std::string(str()); }
    ~~~~~~~~~~~ ^
    auto                     -> std::string
/root/cs144/sponge/libsponge/util/buffer.hh:67:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferList(Buffer buffer) : _buffers{buffer} {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:67:42: warning: parameter 'buffer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    BufferList(Buffer buffer) : _buffers{buffer} {}
                                         ^
                                         std::move( )
/root/cs144/sponge/libsponge/util/buffer.hh:70:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferList(std::string &&str) noexcept {
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:71:20: warning: 'move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        Buffer buf{std::move(str)};
                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:77:5: warning: function 'buffers' should be marked [[nodiscard]] [modernize-use-nodiscard]
    const std::deque<Buffer> &buffers() const { return _buffers; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:77:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    const std::deque<Buffer> &buffers() const { return _buffers; }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^
    auto                                      -> const std::deque<Buffer> &
/root/cs144/sponge/libsponge/util/buffer.hh:84:5: warning: 'operator Buffer' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator Buffer() const;
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:90:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:90:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const;
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:93:5: warning: function 'concatenate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string concatenate() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:93:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string concatenate() const;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/libsponge/util/buffer.hh:105:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const std::string &str) : BufferViewList(std::string_view(str)) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:108:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const char *s) : BufferViewList(std::string_view(s)) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:111:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const BufferList &buffers);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:114:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:114:51: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
                                                  ^~~~~~~~~~~                                          ~
                                                  emplace_back(
/root/cs144/sponge/libsponge/util/buffer.hh:114:62: warning: do not use const_cast [cppcoreguidelines-pro-type-const-cast]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
                                                             ^
/root/cs144/sponge/libsponge/util/buffer.hh:121:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:121:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const;
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:126:5: warning: function 'as_iovecs' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::vector<iovec> as_iovecs() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:126:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::vector<iovec> as_iovecs() const;
    ~~~~~~~~~~~~~~~~~~ ^
    auto                                 -> std::vector<iovec>
/root/cs144/sponge/libsponge/util/file_descriptor.cc:5:1: warning: system include algorithm not allowed [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.cc:6:1: warning: system include fcntl.h not allowed [llvmlibc-restrict-system-libc-headers]
#include <fcntl.h>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.cc:7:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.cc:8:1: warning: system include stdexcept not allowed [llvmlibc-restrict-system-libc-headers]
#include <stdexcept>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.cc:9:1: warning: system include sys/uio.h not allowed [llvmlibc-restrict-system-libc-headers]
#include <sys/uio.h>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.cc:10:1: warning: system include unistd.h not allowed [llvmlibc-restrict-system-libc-headers]
#include <unistd.h>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.cc:12:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
using namespace std;
                ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:15:28: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
FileDescriptor::FDWrapper::FDWrapper(const int fd) : _fd(fd) {
                           ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:17:50: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw runtime_error("invalid fd number:" + to_string(fd));
                                                 ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6016:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:17:52: warning: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        throw runtime_error("invalid fd number:" + to_string(fd));
                                                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6453:3: note: resolves to this declaration
  to_string(int __val)
  ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:21:33: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void FileDescriptor::FDWrapper::close() {
                                ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:22:5: warning: 'SystemCall' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    SystemCall("close", ::close(_fd));
    ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: note: resolves to this declaration
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:22:25: warning: 'close' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    SystemCall("close", ::close(_fd));
                        ^
/usr/include/unistd.h:353:12: note: resolves to this declaration
extern int close (int __fd);
           ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:26:28: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
FileDescriptor::FDWrapper::~FDWrapper() {
                           ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:34:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Exception destructing FDWrapper: " << e.what() << std::endl;
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:34:58: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Exception destructing FDWrapper: " << e.what() << std::endl;
                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:34:70: warning: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Exception destructing FDWrapper: " << e.what() << std::endl;
                                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:108:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:34:73: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Exception destructing FDWrapper: " << e.what() << std::endl;
                                                                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:593:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:39:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
FileDescriptor::FileDescriptor(const int fd) : _internal_fd(make_shared<FDWrapper>(fd)) {}
                ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:39:61: warning: 'make_shared<FileDescriptor::FDWrapper, const int &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
FileDescriptor::FileDescriptor(const int fd) : _internal_fd(make_shared<FDWrapper>(fd)) {}
                                                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr.h:718:5: note: resolves to this declaration
    make_shared(_Args&&... __args)
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:42:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
FileDescriptor::FileDescriptor(shared_ptr<FDWrapper> other_shared_ptr) : _internal_fd(move(other_shared_ptr)) {}
                ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:42:87: warning: 'move<std::shared_ptr<FileDescriptor::FDWrapper> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
FileDescriptor::FileDescriptor(shared_ptr<FDWrapper> other_shared_ptr) : _internal_fd(move(other_shared_ptr)) {}
                                                                                      ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:45:32: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
FileDescriptor FileDescriptor::duplicate() const { return FileDescriptor(_internal_fd); }
                               ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:45:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
FileDescriptor FileDescriptor::duplicate() const { return FileDescriptor(_internal_fd); }
~~~~~~~~~~~~~~                 ^
auto                                             -> FileDescriptor
/root/cs144/sponge/libsponge/util/file_descriptor.cc:49:22: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void FileDescriptor::read(std::string &str, const size_t limit) {
                     ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:51:33: warning: 'min<unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    const size_t size_to_read = min(BUFFER_SIZE, limit);
                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_algobase.h:195:5: note: resolves to this declaration
    min(const _Tp& __a, const _Tp& __b)
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:54:26: warning: 'SystemCall' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    ssize_t bytes_read = SystemCall("read", ::read(fd_num(), str.data(), size_to_read));
                         ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: note: resolves to this declaration
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:54:45: warning: 'read' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    ssize_t bytes_read = SystemCall("read", ::read(fd_num(), str.data(), size_to_read));
                                            ^
/usr/include/unistd.h:360:16: note: resolves to this declaration
extern ssize_t read (int __fd, void *__buf, size_t __nbytes) __wur;
               ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:56:21: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        _internal_fd->_eof = true;
                    ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:68:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
string FileDescriptor::read(const size_t limit) {
                       ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:68:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
string FileDescriptor::read(const size_t limit) {
~~~~~~                 ^
auto                                            -> string
/root/cs144/sponge/libsponge/util/file_descriptor.cc:76:24: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
size_t FileDescriptor::write(BufferViewList buffer, const bool write_all) {
                       ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:76:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
size_t FileDescriptor::write(BufferViewList buffer, const bool write_all) {
~~~~~~                 ^
auto                                                                      -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.cc:82:39: warning: 'SystemCall' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        const ssize_t bytes_written = SystemCall("writev", ::writev(fd_num(), iovecs.data(), iovecs.size()));
                                      ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: note: resolves to this declaration
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:82:60: warning: 'writev' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        const ssize_t bytes_written = SystemCall("writev", ::writev(fd_num(), iovecs.data(), iovecs.size()));
                                                           ^
/usr/include/sys/uio.h:52:16: note: resolves to this declaration
extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)
               ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:96:28: warning: implicit conversion 'size_t' (aka 'unsigned long') -> bool [readability-implicit-bool-conversion]
    } while (write_all and buffer.size());
                           ^
                           (             != 0u)
/root/cs144/sponge/libsponge/util/file_descriptor.cc:101:22: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void FileDescriptor::set_blocking(const bool blocking_state) {
                     ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:101:22: warning: method 'set_blocking' can be made const [readability-make-member-function-const]
void FileDescriptor::set_blocking(const bool blocking_state) {
                     ^
                                                             const
/root/cs144/sponge/libsponge/util/file_descriptor.cc:102:17: warning: 'SystemCall' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    int flags = SystemCall("fcntl", fcntl(fd_num(), F_GETFL));
                ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: note: resolves to this declaration
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:102:37: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
    int flags = SystemCall("fcntl", fcntl(fd_num(), F_GETFL));
                                    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:102:37: warning: 'fcntl' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
/usr/include/fcntl.h:175:12: note: resolves to this declaration
extern int fcntl (int __fd, int __cmd, ...);
           ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:109:5: warning: 'SystemCall' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    SystemCall("fcntl", fcntl(fd_num(), F_SETFL, flags));
    ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: note: resolves to this declaration
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
    ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:109:25: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
    SystemCall("fcntl", fcntl(fd_num(), F_SETFL, flags));
                        ^
/root/cs144/sponge/libsponge/util/file_descriptor.cc:109:25: warning: 'fcntl' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
/usr/include/fcntl.h:175:12: note: resolves to this declaration
extern int fcntl (int __fd, int __cmd, ...);
           ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:6:1: warning: system include array not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <array>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:7:1: warning: system include cstddef not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <cstddef>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:8:1: warning: system include limits not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <limits>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:9:1: warning: system include memory not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:17:13: warning: member variable '_fd' has public visibility [misc-non-private-member-variables-in-classes]
        int _fd;                    //!< The file descriptor number returned by the kernel
            ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:18:14: warning: member variable '_eof' has public visibility [misc-non-private-member-variables-in-classes]
        bool _eof = false;          //!< Flag indicating whether FDWrapper::_fd is at EOF
             ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:19:14: warning: member variable '_closed' has public visibility [misc-non-private-member-variables-in-classes]
        bool _closed = false;       //!< Flag indicating whether FDWrapper::_fd has been closed
             ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:20:18: warning: member variable '_read_count' has public visibility [misc-non-private-member-variables-in-classes]
        unsigned _read_count = 0;   //!< The number of times FDWrapper::_fd has been read
                 ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:21:18: warning: member variable '_write_count' has public visibility [misc-non-private-member-variables-in-classes]
        unsigned _write_count = 0;  //!< The numberof times FDWrapper::_fd has been written
                 ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:35:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
        FDWrapper &operator=(const FDWrapper &other) = delete;
        ~~~~~~~~~~~^
        auto                                         -> FDWrapper &
/root/cs144/sponge/libsponge/util/file_descriptor.hh:37:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
        FDWrapper &operator=(FDWrapper &&other) = delete;
        ~~~~~~~~~~~^
        auto                                    -> FDWrapper &
/root/cs144/sponge/libsponge/util/file_descriptor.hh:48:42: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void register_read() { ++_internal_fd->_read_count; }    //!< increment read count
                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:49:43: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void register_write() { ++_internal_fd->_write_count; }  //!< increment write count
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:59:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string read(const size_t limit = std::numeric_limits<size_t>::max());
    ~~~~~~~~~~~ ^
    auto                                                                      -> std::string
/root/cs144/sponge/libsponge/util/file_descriptor.hh:59:43: warning: 'max' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    std::string read(const size_t limit = std::numeric_limits<size_t>::max());
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/limits:1208:7: note: resolves to this declaration
      max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__ * 2UL + 1; }
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:62:54: warning: 'max' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void read(std::string &str, const size_t limit = std::numeric_limits<size_t>::max());
                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/limits:1208:7: note: resolves to this declaration
      max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__ * 2UL + 1; }
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:65:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(const char *str, const bool write_all = true) { return write(BufferViewList(str), write_all); }
    ~~~~~~ ^
    auto                                                       -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.hh:68:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(const std::string &str, const bool write_all = true) { return write(BufferViewList(str), write_all); }
    ~~~~~~ ^
    auto                                                              -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.hh:71:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(BufferViewList buffer, const bool write_all = true);
    ~~~~~~ ^
    auto                                                             -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.hh:74:32: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void close() { _internal_fd->close(); }
                               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:77:5: warning: function 'duplicate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    FileDescriptor duplicate() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:77:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    FileDescriptor duplicate() const;
    ~~~~~~~~~~~~~~ ^
    auto                             -> FileDescriptor
/root/cs144/sponge/libsponge/util/file_descriptor.hh:86:5: warning: function 'fd_num' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int fd_num() const { return _internal_fd->_fd; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:86:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    int fd_num() const { return _internal_fd->_fd; }
    ~~~ ^
    auto               -> int
/root/cs144/sponge/libsponge/util/file_descriptor.hh:86:45: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    int fd_num() const { return _internal_fd->_fd; }
                                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:89:5: warning: function 'eof' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool eof() const { return _internal_fd->_eof; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:89:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool eof() const { return _internal_fd->_eof; }
    ~~~~ ^
    auto             -> bool
/root/cs144/sponge/libsponge/util/file_descriptor.hh:89:43: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    bool eof() const { return _internal_fd->_eof; }
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:92:5: warning: function 'closed' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool closed() const { return _internal_fd->_closed; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:92:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool closed() const { return _internal_fd->_closed; }
    ~~~~ ^
    auto                -> bool
/root/cs144/sponge/libsponge/util/file_descriptor.hh:92:46: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    bool closed() const { return _internal_fd->_closed; }
                                             ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:95:5: warning: function 'read_count' should be marked [[nodiscard]] [modernize-use-nodiscard]
    unsigned int read_count() const { return _internal_fd->_read_count; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:95:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    unsigned int read_count() const { return _internal_fd->_read_count; }
    ~~~~~~~~~~~~ ^
    auto                            -> unsigned int
/root/cs144/sponge/libsponge/util/file_descriptor.hh:95:58: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    unsigned int read_count() const { return _internal_fd->_read_count; }
                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:98:5: warning: function 'write_count' should be marked [[nodiscard]] [modernize-use-nodiscard]
    unsigned int write_count() const { return _internal_fd->_write_count; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:98:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    unsigned int write_count() const { return _internal_fd->_write_count; }
    ~~~~~~~~~~~~ ^
    auto                             -> unsigned int
/root/cs144/sponge/libsponge/util/file_descriptor.hh:98:59: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    unsigned int write_count() const { return _internal_fd->_write_count; }
                                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:105:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    FileDescriptor &operator=(const FileDescriptor &other) = delete;  //!< \brief copy assignment is forbidden
    ~~~~~~~~~~~~~~~~^
    auto                                                   -> FileDescriptor &
/root/cs144/sponge/libsponge/util/file_descriptor.hh:107:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    FileDescriptor &operator=(FileDescriptor &&other) = default;      //!< \brief move assignment is allowed
    ~~~~~~~~~~~~~~~~^
    auto                                              -> FileDescriptor &
/root/cs144/sponge/libsponge/util/util.hh:4:1: warning: system include algorithm not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:5:1: warning: system include cerrno not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cerrno>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:6:1: warning: system include cstddef not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cstddef>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:7:1: warning: system include cstdint not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdint>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:8:1: warning: system include iterator not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <iterator>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:9:1: warning: system include ostream not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <ostream>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:10:1: warning: system include random not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <random>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:11:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:12:1: warning: system include system_error not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <system_error>
^~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:13:1: warning: system include vector not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:26:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : system_error(error_code, category), _attempt_and_error(attempt + ": " + std::system_error::what()) {}
                                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:5964:5: note: resolves to this declaration
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/root/cs144/sponge/libsponge/util/util.hh:26:81: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : system_error(error_code, category), _attempt_and_error(attempt + ": " + std::system_error::what()) {}
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/libsponge/util/util.hh:29:5: warning: function 'what' should be marked [[nodiscard]] [modernize-use-nodiscard]
    const char *what() const noexcept override { return _attempt_and_error.c_str(); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/util.hh:29:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    const char *what() const noexcept override { return _attempt_and_error.c_str(); }
    ~~~~~~~~~~~~^
    auto                              -> const char *
/root/cs144/sponge/libsponge/util/util.hh:38:71: warning: '__errno_location' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    explicit unix_error(const std::string &attempt, const int error = errno)
                                                                      ^
/usr/include/errno.h:38:18: note: expanded from macro 'errno'
# define errno (*__errno_location ())
                 ^
/usr/include/errno.h:37:13: note: resolves to this declaration
extern int *__errno_location (void) __THROW __attribute_const__;
            ^
/root/cs144/sponge/libsponge/util/util.hh:39:24: warning: 'system_category' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : tagged_error(std::system_category(), attempt, error) {}
                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/system_error:134:40: note: resolves to this declaration
  _GLIBCXX_CONST const error_category& system_category() noexcept;
                                       ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
~~~ ^
auto                                                                                  -> int
/root/cs144/sponge/libsponge/util/util.hh:46:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int SystemCall(const std::string &attempt, const int return_value, const int errno_mask = 0);
~~~ ^
auto                                                                                         -> int
/root/cs144/sponge/libsponge/util/util.hh:49:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::mt19937 get_random_generator();
~~~~~~~~~~~~ ^
auto                                -> std::mt19937
/root/cs144/sponge/libsponge/util/util.hh:52:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
uint64_t timestamp_ms();
~~~~~~~~ ^
auto                    -> uint64_t
/root/cs144/sponge/libsponge/util/util.hh:61:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    InternetChecksum(const uint32_t initial_sum = 0);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/util.hh:63:5: warning: function 'value' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint16_t value() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/util.hh:63:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint16_t value() const;
    ~~~~~~~~ ^
    auto                   -> uint16_t
Built target tidy_quiet_util__file_descriptor.cc
/root/cs144/sponge/libsponge/byte_stream.cc:3:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/byte_stream.cc:15:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
using namespace std;
                ^
/root/cs144/sponge/libsponge/byte_stream.cc:17:13: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
ByteStream::ByteStream(const size_t capacity)
            ^
/root/cs144/sponge/libsponge/byte_stream.cc:18:7: warning: initializer for member 'bas' is redundant [readability-redundant-member-init]
    : bas{}, cap{capacity}, size{}, b_read{}, b_written{}, i_ended{false}, o_ended{false}, _error{false} {}
      ^~~~~
/root/cs144/sponge/libsponge/byte_stream.cc:18:92: warning: member initializer for '_error' is redundant [modernize-use-default-member-init]
    : bas{}, cap{capacity}, size{}, b_read{}, b_written{}, i_ended{false}, o_ended{false}, _error{false} {}
                                                                                           ^~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/byte_stream.cc:20:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
size_t ByteStream::write(const string &data) {
                   ^
/root/cs144/sponge/libsponge/byte_stream.cc:20:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
size_t ByteStream::write(const string &data) {
~~~~~~             ^
auto                                         -> size_t
/root/cs144/sponge/libsponge/byte_stream.cc:22:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto it = data.begin(); it != data.end(); ++it) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (char it : data)
/root/cs144/sponge/libsponge/byte_stream.cc:22:37: warning: 'operator!=<const char *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    for (auto it = data.begin(); it != data.end(); ++it) {
                                    ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:884:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/root/cs144/sponge/libsponge/byte_stream.cc:22:52: warning: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    for (auto it = data.begin(); it != data.end(); ++it) {
                                                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:804:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/byte_stream.cc:24:27: warning: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            bas.push_back(*it);
                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:796:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/byte_stream.cc:36:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
string ByteStream::peek_output(const size_t len) const {
                   ^
/root/cs144/sponge/libsponge/byte_stream.cc:36:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
string ByteStream::peek_output(const size_t len) const {
~~~~~~             ^
auto                                                   -> string
/root/cs144/sponge/libsponge/byte_stream.cc:48:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void ByteStream::pop_output(const size_t len) {
                 ^
/root/cs144/sponge/libsponge/byte_stream.cc:66:25: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
std::string ByteStream::read(const size_t len) {
                        ^
/root/cs144/sponge/libsponge/byte_stream.cc:66:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string ByteStream::read(const size_t len) {
~~~~~~~~~~~             ^
auto                                           -> std::string
/root/cs144/sponge/libsponge/byte_stream.cc:70:25: warning: std::move of the expression of the trivially-copyable type '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' (aka 'char') has no effect; remove std::move() [hicpp-move-const-arg,performance-move-const-arg]
            s.push_back(move(bas.front()));
                        ^~~~~           ~
/root/cs144/sponge/libsponge/byte_stream.cc:70:25: warning: 'move<char &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/byte_stream.cc:81:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void ByteStream::end_input() { i_ended = true; }
                 ^
/root/cs144/sponge/libsponge/byte_stream.cc:83:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
bool ByteStream::input_ended() const { return i_ended; }
                 ^
/root/cs144/sponge/libsponge/byte_stream.cc:83:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool ByteStream::input_ended() const { return i_ended; }
~~~~             ^
auto                                 -> bool
/root/cs144/sponge/libsponge/byte_stream.cc:85:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
size_t ByteStream::buffer_size() const { return size; }
                   ^
/root/cs144/sponge/libsponge/byte_stream.cc:85:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
size_t ByteStream::buffer_size() const { return size; }
~~~~~~             ^
auto                                   -> size_t
/root/cs144/sponge/libsponge/byte_stream.cc:87:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
bool ByteStream::buffer_empty() const { return cap > 0 && size == 0; }
                 ^
/root/cs144/sponge/libsponge/byte_stream.cc:87:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool ByteStream::buffer_empty() const { return cap > 0 && size == 0; }
~~~~             ^
auto                                  -> bool
/root/cs144/sponge/libsponge/byte_stream.cc:89:18: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
bool ByteStream::eof() const { return size <= 0 && i_ended; }
                 ^
/root/cs144/sponge/libsponge/byte_stream.cc:89:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool ByteStream::eof() const { return size <= 0 && i_ended; }
~~~~             ^
auto                         -> bool
/root/cs144/sponge/libsponge/byte_stream.cc:91:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
size_t ByteStream::bytes_written() const { return b_written; }
                   ^
/root/cs144/sponge/libsponge/byte_stream.cc:91:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
size_t ByteStream::bytes_written() const { return b_written; }
~~~~~~             ^
auto                                     -> size_t
/root/cs144/sponge/libsponge/byte_stream.cc:93:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
size_t ByteStream::bytes_read() const { return b_read; }
                   ^
/root/cs144/sponge/libsponge/byte_stream.cc:93:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
size_t ByteStream::bytes_read() const { return b_read; }
~~~~~~             ^
auto                                  -> size_t
/root/cs144/sponge/libsponge/byte_stream.cc:95:20: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
size_t ByteStream::remaining_capacity() const { return cap - size; }
                   ^
/root/cs144/sponge/libsponge/byte_stream.cc:95:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
size_t ByteStream::remaining_capacity() const { return cap - size; }
~~~~~~             ^
auto                                          -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:4:1: warning: system include deque not allowed, transitively included from /root/cs144/sponge/libsponge/byte_stream.hh [llvmlibc-restrict-system-libc-headers]
#include <deque>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/byte_stream.hh:5:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/byte_stream.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/byte_stream.hh:40:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(const std::string &data);
    ~~~~~~ ^
    auto                                  -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:43:5: warning: function 'remaining_capacity' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t remaining_capacity() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:43:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t remaining_capacity() const;
    ~~~~~~ ^
    auto                              -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:57:5: warning: function 'peek_output' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string peek_output(const size_t len) const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:57:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string peek_output(const size_t len) const;
    ~~~~~~~~~~~ ^
    auto                                            -> std::string
/root/cs144/sponge/libsponge/byte_stream.hh:64:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string read(const size_t len);
    ~~~~~~~~~~~ ^
    auto                               -> std::string
/root/cs144/sponge/libsponge/byte_stream.hh:67:5: warning: function 'input_ended' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool input_ended() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:67:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool input_ended() const;
    ~~~~ ^
    auto                     -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:70:5: warning: function 'error' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool error() const { return _error; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:70:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool error() const { return _error; }
    ~~~~ ^
    auto               -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:73:5: warning: function 'buffer_size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t buffer_size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:73:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t buffer_size() const;
    ~~~~~~ ^
    auto                       -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:76:5: warning: function 'buffer_empty' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool buffer_empty() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:76:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool buffer_empty() const;
    ~~~~ ^
    auto                      -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:79:5: warning: function 'eof' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool eof() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:79:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool eof() const;
    ~~~~ ^
    auto             -> bool
/root/cs144/sponge/libsponge/byte_stream.hh:86:5: warning: function 'bytes_written' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t bytes_written() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:86:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t bytes_written() const;
    ~~~~~~ ^
    auto                         -> size_t
/root/cs144/sponge/libsponge/byte_stream.hh:89:5: warning: function 'bytes_read' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t bytes_read() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/byte_stream.hh:89:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t bytes_read() const;
    ~~~~~~ ^
    auto                      -> size_t
Built target tidy_quiet_libsponge__byte_stream.cc
/root/cs144/sponge/libsponge/util/buffer.hh:4:1: warning: system include algorithm not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:5:1: warning: system include deque not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <deque>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:6:1: warning: system include memory not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:7:1: warning: system include numeric not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <numeric>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:8:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:9:1: warning: system include string_view not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <string_view>
^~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:10:1: warning: system include sys/uio.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <sys/uio.h>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:11:1: warning: system include vector not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:23:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:23:51: warning: 'make_shared<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
                                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr.h:718:5: note: resolves to this declaration
    make_shared(_Args&&... __args)
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:23:81: warning: 'move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:27:5: warning: function 'str' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string_view str() const {
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:27:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string_view str() const {
    ~~~~~~~~~~~~~~~~ ^
    auto                         -> std::string_view
/root/cs144/sponge/libsponge/util/buffer.hh:31:25: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        return {_storage->data() + _starting_offset, _storage->size() - _starting_offset};
                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/buffer.hh:31:62: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        return {_storage->data() + _starting_offset, _storage->size() - _starting_offset};
                                                             ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/buffer.hh:34:5: warning: 'operator basic_string_view' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator std::string_view() const { return str(); }
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:38:5: warning: function 'at' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint8_t at(const size_t n) const { return str().at(n); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:38:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint8_t at(const size_t n) const { return str().at(n); }
    ~~~~~~~ ^
    auto                             -> uint8_t
/root/cs144/sponge/libsponge/util/buffer.hh:41:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const { return str().size(); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:41:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const { return str().size(); }
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:44:5: warning: function 'copy' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string copy() const { return std::string(str()); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:44:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string copy() const { return std::string(str()); }
    ~~~~~~~~~~~ ^
    auto                     -> std::string
/root/cs144/sponge/libsponge/util/buffer.hh:67:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferList(Buffer buffer) : _buffers{buffer} {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:67:42: warning: parameter 'buffer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    BufferList(Buffer buffer) : _buffers{buffer} {}
                                         ^
                                         std::move( )
/root/cs144/sponge/libsponge/util/buffer.hh:70:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferList(std::string &&str) noexcept {
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:71:20: warning: 'move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        Buffer buf{std::move(str)};
                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:77:5: warning: function 'buffers' should be marked [[nodiscard]] [modernize-use-nodiscard]
    const std::deque<Buffer> &buffers() const { return _buffers; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:77:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    const std::deque<Buffer> &buffers() const { return _buffers; }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^
    auto                                      -> const std::deque<Buffer> &
/root/cs144/sponge/libsponge/util/buffer.hh:84:5: warning: 'operator Buffer' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator Buffer() const;
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:90:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:90:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const;
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:93:5: warning: function 'concatenate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string concatenate() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:93:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string concatenate() const;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/libsponge/util/buffer.hh:105:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const std::string &str) : BufferViewList(std::string_view(str)) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:108:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const char *s) : BufferViewList(std::string_view(s)) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:111:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const BufferList &buffers);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:114:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:114:51: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
                                                  ^~~~~~~~~~~                                          ~
                                                  emplace_back(
/root/cs144/sponge/libsponge/util/buffer.hh:114:62: warning: do not use const_cast [cppcoreguidelines-pro-type-const-cast]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
                                                             ^
/root/cs144/sponge/libsponge/util/buffer.hh:121:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:121:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const;
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:126:5: warning: function 'as_iovecs' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::vector<iovec> as_iovecs() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:126:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::vector<iovec> as_iovecs() const;
    ~~~~~~~~~~~~~~~~~~ ^
    auto                                 -> std::vector<iovec>
/root/cs144/sponge/libsponge/util/eventloop.cc:5:1: warning: system include cerrno not allowed [llvmlibc-restrict-system-libc-headers]
#include <cerrno>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.cc:6:1: warning: system include stdexcept not allowed [llvmlibc-restrict-system-libc-headers]
#include <stdexcept>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.cc:7:1: warning: system include system_error not allowed [llvmlibc-restrict-system-libc-headers]
#include <system_error>
^~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.cc:8:1: warning: system include utility not allowed [llvmlibc-restrict-system-libc-headers]
#include <utility>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.cc:9:1: warning: system include vector not allowed [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.cc:11:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
using namespace std;
                ^
/root/cs144/sponge/libsponge/util/eventloop.cc:13:31: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
unsigned int EventLoop::Rule::service_count() const {
                              ^
/root/cs144/sponge/libsponge/util/eventloop.cc:13:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
unsigned int EventLoop::Rule::service_count() const {
~~~~~~~~~~~~                  ^
auto                                                -> unsigned int
/root/cs144/sponge/libsponge/util/eventloop.cc:23:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
void EventLoop::add_rule(const FileDescriptor &fd,
                ^
/root/cs144/sponge/libsponge/util/eventloop.cc:61:30: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
EventLoop::Result EventLoop::wait_next_event(const int timeout_ms) {
                             ^
/root/cs144/sponge/libsponge/util/eventloop.cc:61:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
EventLoop::Result EventLoop::wait_next_event(const int timeout_ms) {
~~~~~~~~~~~~~~~~~            ^
auto                                                               -> EventLoop::Result
/root/cs144/sponge/libsponge/util/eventloop.cc:67:40: warning: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    for (auto it = _rules.cbegin(); it != _rules.cend();) {  // NOTE: it gets erased or incremented in loop body
                                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:335:7: note: resolves to this declaration
      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.cc:68:33: warning: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        const auto &this_rule = *it;
                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:293:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.cc:71:29: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            this_rule.cancel();
                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:576:12: note: resolves to this declaration
      _Res operator()(_ArgTypes... __args) const;
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:72:16: warning: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            it = _rules.erase(it);
               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:264:12: note: resolves to this declaration
    struct _List_const_iterator
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:77:29: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            this_rule.cancel();
                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:576:12: note: resolves to this declaration
      _Res operator()(_ArgTypes... __args) const;
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:78:16: warning: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            it = _rules.erase(it);
               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:264:12: note: resolves to this declaration
    struct _List_const_iterator
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:82:31: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        if (this_rule.interest()) {
                              ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:576:12: note: resolves to this declaration
      _Res operator()(_ArgTypes... __args) const;
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:83:67: warning: consider replacing 'short' with 'int16' [google-runtime-int]
            pollfds.push_back({this_rule.fd.fd_num(), static_cast<short>(this_rule.direction), 0});
                                                                  ^
/root/cs144/sponge/libsponge/util/eventloop.cc:88:9: warning: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        ++it;
        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:301:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.cc:98:18: warning: 'SystemCall' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        if (0 == SystemCall("poll", ::poll(pollfds.data(), pollfds.size(), timeout_ms))) {
                 ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: note: resolves to this declaration
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
    ^
/root/cs144/sponge/libsponge/util/eventloop.cc:98:37: warning: 'poll' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        if (0 == SystemCall("poll", ::poll(pollfds.data(), pollfds.size(), timeout_ms))) {
                                    ^
/usr/include/sys/poll.h:54:12: note: resolves to this declaration
extern int poll (struct pollfd *__fds, nfds_t __nfds, int __timeout);
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:109:27: warning: 'make_pair<std::_List_iterator<EventLoop::Rule>, unsigned long>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    for (auto [it, idx] = make_pair(_rules.begin(), size_t(0)); it != _rules.end(); ++idx) {
                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_pair.h:524:5: note: resolves to this declaration
    make_pair(_T1&& __x, _T2&& __y)
    ^
/root/cs144/sponge/libsponge/util/eventloop.cc:109:68: warning: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    for (auto [it, idx] = make_pair(_rules.begin(), size_t(0)); it != _rules.end(); ++idx) {
                                                                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:251:7: note: resolves to this declaration
      operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.cc:110:42: warning: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        const auto &this_pollfd = pollfds[idx];
                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:930:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.cc:117:33: warning: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        const auto &this_rule = *it;
                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:209:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.cc:120:25: warning: implicit conversion 'short' -> bool [readability-implicit-bool-conversion]
        if (poll_hup && this_pollfd.events && !poll_ready) {
                        ^
                        (                  != 0)
/root/cs144/sponge/libsponge/util/eventloop.cc:124:29: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            this_rule.cancel();
                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:576:12: note: resolves to this declaration
      _Res operator()(_ArgTypes... __args) const;
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:125:16: warning: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            it = _rules.erase(it);
               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:185:12: note: resolves to this declaration
    struct _List_iterator
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:132:31: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            this_rule.callback();
                              ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:576:12: note: resolves to this declaration
      _Res operator()(_ArgTypes... __args) const;
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:135:81: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
            if (count_before == this_rule.service_count() and this_rule.interest()) {
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:576:12: note: resolves to this declaration
      _Res operator()(_ArgTypes... __args) const;
           ^
/root/cs144/sponge/libsponge/util/eventloop.cc:141:9: warning: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        ++it;  // if we got here, it means we didn't call _rules.erase()
        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:217:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/root/cs144/sponge/libsponge/util/eventloop.hh:6:1: warning: system include cstdlib not allowed, transitively included from /root/cs144/sponge/libsponge/util/eventloop.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdlib>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.hh:7:1: warning: system include functional not allowed, transitively included from /root/cs144/sponge/libsponge/util/eventloop.hh [llvmlibc-restrict-system-libc-headers]
#include <functional>
^~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.hh:8:1: warning: system include list not allowed, transitively included from /root/cs144/sponge/libsponge/util/eventloop.hh [llvmlibc-restrict-system-libc-headers]
#include <list>
^~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.hh:9:1: warning: system include poll.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/eventloop.hh [llvmlibc-restrict-system-libc-headers]
#include <poll.h>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/eventloop.hh:28:24: warning: member variable 'fd' has public visibility [misc-non-private-member-variables-in-classes]
        FileDescriptor fd;    //!< FileDescriptor to monitor for activity.
                       ^
/root/cs144/sponge/libsponge/util/eventloop.hh:29:19: warning: member variable 'direction' has public visibility [misc-non-private-member-variables-in-classes]
        Direction direction;  //!< Direction::In for reading from fd, Direction::Out for writing to fd.
                  ^
/root/cs144/sponge/libsponge/util/eventloop.hh:30:19: warning: member variable 'callback' has public visibility [misc-non-private-member-variables-in-classes]
        CallbackT callback;   //!< A callback that reads or writes fd.
                  ^
/root/cs144/sponge/libsponge/util/eventloop.hh:31:19: warning: member variable 'interest' has public visibility [misc-non-private-member-variables-in-classes]
        InterestT interest;   //!< A callback that returns `true` whenever fd should be polled.
                  ^
/root/cs144/sponge/libsponge/util/eventloop.hh:32:19: warning: member variable 'cancel' has public visibility [misc-non-private-member-variables-in-classes]
        CallbackT cancel;     //!< A callback that is called when the rule is cancelled (e.g. on hangup)
                  ^
/root/cs144/sponge/libsponge/util/eventloop.hh:36:9: warning: function 'service_count' should be marked [[nodiscard]] [modernize-use-nodiscard]
        unsigned int service_count() const;
        ^
        [[nodiscard]] 
/root/cs144/sponge/libsponge/util/eventloop.hh:36:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
        unsigned int service_count() const;
        ~~~~~~~~~~~~ ^
        auto                               -> unsigned int
/root/cs144/sponge/libsponge/util/eventloop.hh:58:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    Result wait_next_event(const int timeout_ms);
    ~~~~~~ ^
    auto                                         -> Result
/root/cs144/sponge/libsponge/util/file_descriptor.hh:6:1: warning: system include array not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <array>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:7:1: warning: system include cstddef not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <cstddef>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:8:1: warning: system include limits not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <limits>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:9:1: warning: system include memory not allowed, transitively included from /root/cs144/sponge/libsponge/util/file_descriptor.hh [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/file_descriptor.hh:17:13: warning: member variable '_fd' has public visibility [misc-non-private-member-variables-in-classes]
        int _fd;                    //!< The file descriptor number returned by the kernel
            ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:18:14: warning: member variable '_eof' has public visibility [misc-non-private-member-variables-in-classes]
        bool _eof = false;          //!< Flag indicating whether FDWrapper::_fd is at EOF
             ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:19:14: warning: member variable '_closed' has public visibility [misc-non-private-member-variables-in-classes]
        bool _closed = false;       //!< Flag indicating whether FDWrapper::_fd has been closed
             ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:20:18: warning: member variable '_read_count' has public visibility [misc-non-private-member-variables-in-classes]
        unsigned _read_count = 0;   //!< The number of times FDWrapper::_fd has been read
                 ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:21:18: warning: member variable '_write_count' has public visibility [misc-non-private-member-variables-in-classes]
        unsigned _write_count = 0;  //!< The numberof times FDWrapper::_fd has been written
                 ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:35:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
        FDWrapper &operator=(const FDWrapper &other) = delete;
        ~~~~~~~~~~~^
        auto                                         -> FDWrapper &
/root/cs144/sponge/libsponge/util/file_descriptor.hh:37:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
        FDWrapper &operator=(FDWrapper &&other) = delete;
        ~~~~~~~~~~~^
        auto                                    -> FDWrapper &
/root/cs144/sponge/libsponge/util/file_descriptor.hh:48:42: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void register_read() { ++_internal_fd->_read_count; }    //!< increment read count
                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:49:43: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void register_write() { ++_internal_fd->_write_count; }  //!< increment write count
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:59:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string read(const size_t limit = std::numeric_limits<size_t>::max());
    ~~~~~~~~~~~ ^
    auto                                                                      -> std::string
/root/cs144/sponge/libsponge/util/file_descriptor.hh:59:43: warning: 'max' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    std::string read(const size_t limit = std::numeric_limits<size_t>::max());
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/limits:1208:7: note: resolves to this declaration
      max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__ * 2UL + 1; }
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:62:54: warning: 'max' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void read(std::string &str, const size_t limit = std::numeric_limits<size_t>::max());
                                                     ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/limits:1208:7: note: resolves to this declaration
      max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__ * 2UL + 1; }
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:65:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(const char *str, const bool write_all = true) { return write(BufferViewList(str), write_all); }
    ~~~~~~ ^
    auto                                                       -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.hh:68:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(const std::string &str, const bool write_all = true) { return write(BufferViewList(str), write_all); }
    ~~~~~~ ^
    auto                                                              -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.hh:71:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t write(BufferViewList buffer, const bool write_all = true);
    ~~~~~~ ^
    auto                                                             -> size_t
/root/cs144/sponge/libsponge/util/file_descriptor.hh:74:32: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    void close() { _internal_fd->close(); }
                               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:77:5: warning: function 'duplicate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    FileDescriptor duplicate() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:77:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    FileDescriptor duplicate() const;
    ~~~~~~~~~~~~~~ ^
    auto                             -> FileDescriptor
/root/cs144/sponge/libsponge/util/file_descriptor.hh:86:5: warning: function 'fd_num' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int fd_num() const { return _internal_fd->_fd; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:86:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    int fd_num() const { return _internal_fd->_fd; }
    ~~~ ^
    auto               -> int
/root/cs144/sponge/libsponge/util/file_descriptor.hh:86:45: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    int fd_num() const { return _internal_fd->_fd; }
                                            ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:89:5: warning: function 'eof' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool eof() const { return _internal_fd->_eof; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:89:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool eof() const { return _internal_fd->_eof; }
    ~~~~ ^
    auto             -> bool
/root/cs144/sponge/libsponge/util/file_descriptor.hh:89:43: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    bool eof() const { return _internal_fd->_eof; }
                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:92:5: warning: function 'closed' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool closed() const { return _internal_fd->_closed; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:92:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool closed() const { return _internal_fd->_closed; }
    ~~~~ ^
    auto                -> bool
/root/cs144/sponge/libsponge/util/file_descriptor.hh:92:46: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    bool closed() const { return _internal_fd->_closed; }
                                             ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:95:5: warning: function 'read_count' should be marked [[nodiscard]] [modernize-use-nodiscard]
    unsigned int read_count() const { return _internal_fd->_read_count; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:95:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    unsigned int read_count() const { return _internal_fd->_read_count; }
    ~~~~~~~~~~~~ ^
    auto                            -> unsigned int
/root/cs144/sponge/libsponge/util/file_descriptor.hh:95:58: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    unsigned int read_count() const { return _internal_fd->_read_count; }
                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:98:5: warning: function 'write_count' should be marked [[nodiscard]] [modernize-use-nodiscard]
    unsigned int write_count() const { return _internal_fd->_write_count; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/file_descriptor.hh:98:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    unsigned int write_count() const { return _internal_fd->_write_count; }
    ~~~~~~~~~~~~ ^
    auto                             -> unsigned int
/root/cs144/sponge/libsponge/util/file_descriptor.hh:98:59: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    unsigned int write_count() const { return _internal_fd->_write_count; }
                                                          ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/file_descriptor.hh:105:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    FileDescriptor &operator=(const FileDescriptor &other) = delete;  //!< \brief copy assignment is forbidden
    ~~~~~~~~~~~~~~~~^
    auto                                                   -> FileDescriptor &
/root/cs144/sponge/libsponge/util/file_descriptor.hh:107:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    FileDescriptor &operator=(FileDescriptor &&other) = default;      //!< \brief move assignment is allowed
    ~~~~~~~~~~~~~~~~^
    auto                                              -> FileDescriptor &
/root/cs144/sponge/libsponge/util/util.hh:4:1: warning: system include algorithm not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:5:1: warning: system include cerrno not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cerrno>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:6:1: warning: system include cstddef not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cstddef>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:7:1: warning: system include cstdint not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdint>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:8:1: warning: system include iterator not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <iterator>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:9:1: warning: system include ostream not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <ostream>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:10:1: warning: system include random not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <random>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:11:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:12:1: warning: system include system_error not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <system_error>
^~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:13:1: warning: system include vector not allowed, transitively included from /root/cs144/sponge/libsponge/util/util.hh [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/util.hh:26:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : system_error(error_code, category), _attempt_and_error(attempt + ": " + std::system_error::what()) {}
                                                                         ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:5964:5: note: resolves to this declaration
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/root/cs144/sponge/libsponge/util/util.hh:26:81: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : system_error(error_code, category), _attempt_and_error(attempt + ": " + std::system_error::what()) {}
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/basic_string.h:6028:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/root/cs144/sponge/libsponge/util/util.hh:29:5: warning: function 'what' should be marked [[nodiscard]] [modernize-use-nodiscard]
    const char *what() const noexcept override { return _attempt_and_error.c_str(); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/util.hh:29:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    const char *what() const noexcept override { return _attempt_and_error.c_str(); }
    ~~~~~~~~~~~~^
    auto                              -> const char *
/root/cs144/sponge/libsponge/util/util.hh:38:71: warning: '__errno_location' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    explicit unix_error(const std::string &attempt, const int error = errno)
                                                                      ^
/usr/include/errno.h:38:18: note: expanded from macro 'errno'
# define errno (*__errno_location ())
                 ^
/usr/include/errno.h:37:13: note: resolves to this declaration
extern int *__errno_location (void) __THROW __attribute_const__;
            ^
/root/cs144/sponge/libsponge/util/util.hh:39:24: warning: 'system_category' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        : tagged_error(std::system_category(), attempt, error) {}
                       ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/system_error:134:40: note: resolves to this declaration
  _GLIBCXX_CONST const error_category& system_category() noexcept;
                                       ^
/root/cs144/sponge/libsponge/util/util.hh:43:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int SystemCall(const char *attempt, const int return_value, const int errno_mask = 0);
~~~ ^
auto                                                                                  -> int
/root/cs144/sponge/libsponge/util/util.hh:46:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int SystemCall(const std::string &attempt, const int return_value, const int errno_mask = 0);
~~~ ^
auto                                                                                         -> int
/root/cs144/sponge/libsponge/util/util.hh:49:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::mt19937 get_random_generator();
~~~~~~~~~~~~ ^
auto                                -> std::mt19937
/root/cs144/sponge/libsponge/util/util.hh:52:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
uint64_t timestamp_ms();
~~~~~~~~ ^
auto                    -> uint64_t
/root/cs144/sponge/libsponge/util/util.hh:61:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    InternetChecksum(const uint32_t initial_sum = 0);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/util.hh:63:5: warning: function 'value' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint16_t value() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/util.hh:63:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint16_t value() const;
    ~~~~~~~~ ^
    auto                   -> uint16_t
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/type_traits:2239:7: warning: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
      std::declval<_Fn>()(std::declval<_Args>()...)
      ^
/root/cs144/sponge/libsponge/util/eventloop.hh:55:35: note: resolves to this declaration
        const CallbackT &cancel = [] {});
                                  ^
Built target tidy_quiet_util__eventloop.cc
/root/cs144/sponge/doctests/parser_dt.cc:3:1: warning: system include cstdint not allowed [llvmlibc-restrict-system-libc-headers]
#include <cstdint>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/parser_dt.cc:4:1: warning: system include cstdlib not allowed [llvmlibc-restrict-system-libc-headers]
#include <cstdlib>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/parser_dt.cc:5:1: warning: system include stdexcept not allowed [llvmlibc-restrict-system-libc-headers]
#include <stdexcept>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/parser_dt.cc:6:1: warning: system include vector not allowed [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/parser_dt.cc:8:5: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
int main() {
    ^
/root/cs144/sponge/doctests/parser_dt.cc:8:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int main() {
~~~ ^
auto       -> int
/root/cs144/sponge/doctests/parser_dt.cc:10:11: warning: suspicious #include of file with '.cc' extension [bugprone-suspicious-include]
#include "parser_example.cc"
          ^
/root/cs144/sponge/doctests/parser_example.cc:8:18: warning: 0x32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
buffer.push_back(0x32);  // manually added to beginning of string
                 ^
/root/cs144/sponge/doctests/parser_example.cc:11:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    p.u32(buffer, val1);
    ^~
    NetUnparser::
/root/cs144/sponge/doctests/parser_example.cc:12:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    p.u16(buffer, val2);
    ^~
    NetUnparser::
/root/cs144/sponge/doctests/parser_example.cc:13:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    p.u8(buffer, val3);
    ^~
    NetUnparser::
/root/cs144/sponge/doctests/parser_example.cc:14:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    p.u32(buffer, val4);
    ^~
    NetUnparser::
/root/cs144/sponge/doctests/parser_example.cc:18:1: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
uint8_t out0, out3;
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/parser_example.cc:18:9: warning: variable 'out0' is not initialized [cppcoreguidelines-init-variables]
uint8_t out0, out3;
        ^
             = 0
/root/cs144/sponge/doctests/parser_example.cc:18:15: warning: variable 'out3' is not initialized [cppcoreguidelines-init-variables]
uint8_t out0, out3;
              ^
                   = 0
/root/cs144/sponge/doctests/parser_example.cc:19:1: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
uint32_t out1, out4;
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/parser_example.cc:19:10: warning: variable 'out1' is not initialized [cppcoreguidelines-init-variables]
uint32_t out1, out4;
         ^
              = 0
/root/cs144/sponge/doctests/parser_example.cc:19:16: warning: variable 'out4' is not initialized [cppcoreguidelines-init-variables]
uint32_t out1, out4;
               ^
                    = 0
/root/cs144/sponge/doctests/parser_example.cc:20:10: warning: variable 'out2' is not initialized [cppcoreguidelines-init-variables]
uint16_t out2;
         ^
              = 0
/root/cs144/sponge/doctests/parser_example.cc:30:13: warning: 0x32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
if (out0 != 0x32 || out1 != val1 || out2 != val2 || out3 != val3 || out4 != val4) {
            ^
/root/cs144/sponge/libsponge/util/buffer.hh:4:1: warning: system include algorithm not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:5:1: warning: system include deque not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <deque>
^~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:6:1: warning: system include memory not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <memory>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:7:1: warning: system include numeric not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <numeric>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:8:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:9:1: warning: system include string_view not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <string_view>
^~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:10:1: warning: system include sys/uio.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <sys/uio.h>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:11:1: warning: system include vector not allowed, transitively included from /root/cs144/sponge/libsponge/util/buffer.hh [llvmlibc-restrict-system-libc-headers]
#include <vector>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/buffer.hh:23:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:23:51: warning: 'make_shared<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
                                                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr.h:718:5: note: resolves to this declaration
    make_shared(_Args&&... __args)
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:23:81: warning: 'move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    Buffer(std::string &&str) noexcept : _storage(std::make_shared<std::string>(std::move(str))) {}
                                                                                ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:27:5: warning: function 'str' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string_view str() const {
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:27:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string_view str() const {
    ~~~~~~~~~~~~~~~~ ^
    auto                         -> std::string_view
/root/cs144/sponge/libsponge/util/buffer.hh:31:25: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        return {_storage->data() + _starting_offset, _storage->size() - _starting_offset};
                        ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/buffer.hh:31:62: warning: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        return {_storage->data() + _starting_offset, _storage->size() - _starting_offset};
                                                             ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/shared_ptr_base.h:1010:7: note: resolves to this declaration
      operator->() const noexcept
      ^
/root/cs144/sponge/libsponge/util/buffer.hh:34:5: warning: 'operator basic_string_view' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator std::string_view() const { return str(); }
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:38:5: warning: function 'at' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint8_t at(const size_t n) const { return str().at(n); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:38:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint8_t at(const size_t n) const { return str().at(n); }
    ~~~~~~~ ^
    auto                             -> uint8_t
/root/cs144/sponge/libsponge/util/buffer.hh:41:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const { return str().size(); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:41:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const { return str().size(); }
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:44:5: warning: function 'copy' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string copy() const { return std::string(str()); }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:44:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string copy() const { return std::string(str()); }
    ~~~~~~~~~~~ ^
    auto                     -> std::string
/root/cs144/sponge/libsponge/util/buffer.hh:67:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferList(Buffer buffer) : _buffers{buffer} {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:67:42: warning: parameter 'buffer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    BufferList(Buffer buffer) : _buffers{buffer} {}
                                         ^
                                         std::move( )
/root/cs144/sponge/libsponge/util/buffer.hh:70:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferList(std::string &&str) noexcept {
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:71:20: warning: 'move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        Buffer buf{std::move(str)};
                   ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:99:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/root/cs144/sponge/libsponge/util/buffer.hh:77:5: warning: function 'buffers' should be marked [[nodiscard]] [modernize-use-nodiscard]
    const std::deque<Buffer> &buffers() const { return _buffers; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:77:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    const std::deque<Buffer> &buffers() const { return _buffers; }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^
    auto                                      -> const std::deque<Buffer> &
/root/cs144/sponge/libsponge/util/buffer.hh:84:5: warning: 'operator Buffer' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator Buffer() const;
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:90:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:90:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const;
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:93:5: warning: function 'concatenate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string concatenate() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:93:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string concatenate() const;
    ~~~~~~~~~~~ ^
    auto                            -> std::string
/root/cs144/sponge/libsponge/util/buffer.hh:105:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const std::string &str) : BufferViewList(std::string_view(str)) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:108:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const char *s) : BufferViewList(std::string_view(s)) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:111:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(const BufferList &buffers);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:114:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
    ^
    explicit 
/root/cs144/sponge/libsponge/util/buffer.hh:114:51: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
                                                  ^~~~~~~~~~~                                          ~
                                                  emplace_back(
/root/cs144/sponge/libsponge/util/buffer.hh:114:62: warning: do not use const_cast [cppcoreguidelines-pro-type-const-cast]
    BufferViewList(std::string_view str) { _views.push_back({const_cast<char *>(str.data()), str.size()}); }
                                                             ^
/root/cs144/sponge/libsponge/util/buffer.hh:121:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t size() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:121:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    size_t size() const;
    ~~~~~~ ^
    auto                -> size_t
/root/cs144/sponge/libsponge/util/buffer.hh:126:5: warning: function 'as_iovecs' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::vector<iovec> as_iovecs() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/buffer.hh:126:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::vector<iovec> as_iovecs() const;
    ~~~~~~~~~~~~~~~~~~ ^
    auto                                 -> std::vector<iovec>
/root/cs144/sponge/libsponge/util/parser.hh:6:1: warning: system include cstdint not allowed, transitively included from /root/cs144/sponge/libsponge/util/parser.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdint>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/parser.hh:7:1: warning: system include cstdlib not allowed, transitively included from /root/cs144/sponge/libsponge/util/parser.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdlib>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/parser.hh:8:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/parser.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/parser.hh:9:1: warning: system include utility not allowed, transitively included from /root/cs144/sponge/libsponge/util/parser.hh [llvmlibc-restrict-system-libc-headers]
#include <utility>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/parser.hh:23:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string as_string(const ParseResult r);
~~~~~~~~~~~ ^
auto                                       -> std::string
/root/cs144/sponge/libsponge/util/parser.hh:35:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    T _parse_int();
    ~ ^
    auto           -> T
/root/cs144/sponge/libsponge/util/parser.hh:38:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    NetParser(Buffer buffer) : _buffer(buffer) {}
    ^
    explicit 
/root/cs144/sponge/libsponge/util/parser.hh:38:15: warning: pass by value and use std::move [modernize-pass-by-value]
    NetParser(Buffer buffer) : _buffer(buffer) {}
              ^
                                       std::move( )
/root/cs144/sponge/libsponge/util/parser.hh:38:40: warning: parameter 'buffer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    NetParser(Buffer buffer) : _buffer(buffer) {}
                                       ^
                                       std::move( )
/root/cs144/sponge/libsponge/util/parser.hh:40:5: warning: function 'buffer' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Buffer buffer() const { return _buffer; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/parser.hh:40:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    Buffer buffer() const { return _buffer; }
    ~~~~~~ ^
    auto                  -> Buffer
/root/cs144/sponge/libsponge/util/parser.hh:43:5: warning: function 'get_error' should be marked [[nodiscard]] [modernize-use-nodiscard]
    ParseResult get_error() const { return _error; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/parser.hh:43:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    ParseResult get_error() const { return _error; }
    ~~~~~~~~~~~ ^
    auto                          -> ParseResult
/root/cs144/sponge/libsponge/util/parser.hh:50:5: warning: function 'error' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool error() const { return get_error() != ParseResult::NoError; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/parser.hh:50:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool error() const { return get_error() != ParseResult::NoError; }
    ~~~~ ^
    auto               -> bool
/root/cs144/sponge/libsponge/util/parser.hh:53:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint32_t u32();
    ~~~~~~~~ ^
    auto           -> uint32_t
/root/cs144/sponge/libsponge/util/parser.hh:56:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint16_t u16();
    ~~~~~~~~ ^
    auto           -> uint16_t
/root/cs144/sponge/libsponge/util/parser.hh:59:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint8_t u8();
    ~~~~~~~ ^
    auto         -> uint8_t
Built target tidy_quiet_doctests__parser_dt.cc
Scanning dependencies of target tidy_quiet_doctests__address_dt.cc
/root/cs144/sponge/doctests/address_dt.cc:3:1: warning: system include cstdlib not allowed [llvmlibc-restrict-system-libc-headers]
#include <cstdlib>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/address_dt.cc:4:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/address_dt.cc:5:1: warning: system include stdexcept not allowed [llvmlibc-restrict-system-libc-headers]
#include <stdexcept>
^~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/doctests/address_dt.cc:7:5: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
int main() {
    ^
/root/cs144/sponge/doctests/address_dt.cc:7:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int main() {
~~~ ^
auto       -> int
/root/cs144/sponge/doctests/address_dt.cc:9:11: warning: suspicious #include of file with '.cc' extension [bugprone-suspicious-include]
#include "address_example_1.cc"
          ^
/root/cs144/sponge/doctests/address_dt.cc:10:11: warning: suspicious #include of file with '.cc' extension [bugprone-suspicious-include]
#include "address_example_2.cc"
          ^
/root/cs144/sponge/doctests/address_dt.cc:11:11: warning: suspicious #include of file with '.cc' extension [bugprone-suspicious-include]
#include "address_example_3.cc"
          ^
/root/cs144/sponge/doctests/address_dt.cc:12:41: warning: 443 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
        if ((google_webserver.port() != 443) || (a_dns_server_numeric != 0x12'47'00'97)) {
                                        ^
/root/cs144/sponge/doctests/address_dt.cc:12:74: warning: 0x12'47'00'97 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
        if ((google_webserver.port() != 443) || (a_dns_server_numeric != 0x12'47'00'97)) {
                                                                         ^
/root/cs144/sponge/doctests/address_dt.cc:16:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "This test requires Internet access and working DNS.\n";
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/doctests/address_dt.cc:17:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Error: " << e.what() << "\n";
                  ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/doctests/address_dt.cc:17:32: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Error: " << e.what() << "\n";
                               ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/doctests/address_dt.cc:17:44: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
        std::cerr << "Error: " << e.what() << "\n";
                                           ^
/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/ostream:559:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/root/cs144/sponge/libsponge/util/address.hh:4:1: warning: system include cstddef not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <cstddef>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:5:1: warning: system include cstdint not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <cstdint>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:6:1: warning: system include netdb.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <netdb.h>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:7:1: warning: system include netinet/in.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <netinet/in.h>
^~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:8:1: warning: system include string not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <string>
^~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:9:1: warning: system include sys/socket.h not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <sys/socket.h>
^~~~~~~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:10:1: warning: system include utility not allowed, transitively included from /root/cs144/sponge/libsponge/util/address.hh [llvmlibc-restrict-system-libc-headers]
#include <utility>
^~~~~~~~~~~~~~~~~~
/root/cs144/sponge/libsponge/util/address.hh:19:26: warning: member variable 'storage' has public visibility [misc-non-private-member-variables-in-classes]
        sockaddr_storage storage{};  //!< The wrapped struct itself.
                         ^
/root/cs144/sponge/libsponge/util/address.hh:20:9: warning: 'operator sockaddr *' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
        operator sockaddr *();
        ^
        explicit 
/root/cs144/sponge/libsponge/util/address.hh:21:9: warning: 'operator const sockaddr *' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
        operator const sockaddr *() const;
        ^
        explicit 
/root/cs144/sponge/libsponge/util/address.hh:36:5: warning: constructors that are callable with a single argument must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Address(const std::string &ip, const std::uint16_t port = 0);
    ^
    explicit 
/root/cs144/sponge/libsponge/util/address.hh:42:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool operator==(const Address &other) const;
    ~~~~ ^
    auto                                        -> bool
/root/cs144/sponge/libsponge/util/address.hh:43:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    bool operator!=(const Address &other) const { return not operator==(other); }
    ~~~~ ^
    auto                                        -> bool
/root/cs144/sponge/libsponge/util/address.hh:49:5: warning: function 'ip_port' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::pair<std::string, uint16_t> ip_port() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/address.hh:49:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::pair<std::string, uint16_t> ip_port() const;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
    auto                                             -> std::pair<std::string, uint16_t>
/root/cs144/sponge/libsponge/util/address.hh:51:5: warning: function 'ip' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string ip() const { return ip_port().first; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/address.hh:51:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string ip() const { return ip_port().first; }
    ~~~~~~~~~~~ ^
    auto                   -> std::string
/root/cs144/sponge/libsponge/util/address.hh:53:5: warning: function 'port' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint16_t port() const { return ip_port().second; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/address.hh:53:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint16_t port() const { return ip_port().second; }
    ~~~~~~~~ ^
    auto                  -> uint16_t
/root/cs144/sponge/libsponge/util/address.hh:55:5: warning: function 'ipv4_numeric' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint32_t ipv4_numeric() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/address.hh:55:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint32_t ipv4_numeric() const;
    ~~~~~~~~ ^
    auto                          -> uint32_t
/root/cs144/sponge/libsponge/util/address.hh:57:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    static Address from_ipv4_numeric(const uint32_t ip_address);
           ~~~~~~~ ^
           auto                                                 -> Address
/root/cs144/sponge/libsponge/util/address.hh:59:5: warning: function 'to_string' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string to_string() const;
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/address.hh:59:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    std::string to_string() const;
    ~~~~~~~~~~~ ^
    auto                          -> std::string
/root/cs144/sponge/libsponge/util/address.hh:66:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
    socklen_t size() const { return _size; }
    ^
    [[nodiscard]] 
/root/cs144/sponge/libsponge/util/address.hh:66:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    socklen_t size() const { return _size; }
    ~~~~~~~~~ ^
    auto                   -> socklen_t
/root/cs144/sponge/libsponge/util/address.hh:68:5: warning: 'operator const sockaddr *' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    operator const sockaddr *() const { return _address; }
    ^
    explicit 
Built target tidy_quiet_doctests__address_dt.cc
Scanning dependencies of target tidy_quiet_doctests__address_example_2.cc
/root/cs144/sponge/doctests/address_example_2.cc:1:7: error: unknown type name 'Address' [clang-diagnostic-error]
const Address a_dns_server("18.71.0.151", 53);
      ^
/root/cs144/sponge/doctests/address_example_2.cc:1:15: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
const Address a_dns_server("18.71.0.151", 53);
              ^
make[3]: *** [CMakeFiles/tidy_quiet_doctests__address_example_2.cc.dir/build.make:76: CMakeFiles/tidy_quiet_doctests__address_example_2.cc] Error 1
make[2]: *** [CMakeFiles/Makefile2:666: CMakeFiles/tidy_quiet_doctests__address_example_2.cc.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:2246: CMakeFiles/tidy.dir/rule] Error 2
make: *** [Makefile:1071: tidy] Error 2
